@startuml
class utils.filters.Furier {
- int size
- float[] buffer
- float sum
- int count
+ void process(MV,CMV)
}
class protection.model.logicalnodes.gui.other.NHMISignal {
- String name
- DataAttribute<?> dataX
+ String getName()
+ DataAttribute<?> getDataX()
+ DataAttribute<?> getDataY()
}
class protection.model.logicalnodes.gui.NHMIP {
- HashMap<NHMISignal,XYSeries> datasets
- XYSeriesCollection dataset
- JFrame frame
- int notifyCount
- int passCount
- NumberAxis xAxis
- double currentRange
+ void process()
+ void addSignals(NHMISignal)
+ void drawCharacteristic(String,List<NHMIPoint<Double,Double>>)
- void setCurrentRange(double)
+ void setMaxRange(double)
}
class breakerControl.command.DPC {
- DataAttribute<Byte> stVal
- DataAttribute<Boolean> ctVal
}
class protection.model.logicalnodes.gui.other.NHMIexample {
- {static} List<LN> logicalNodes
+ {static} void main(String[])
}
abstract class utils.filters.Filter {
+ {abstract}void process(MV,CMV)
}
class protection.model.logicalnodes.gui.NHMI {
- HashMap<XYSeries,DataAttribute<?>> datasets
- CombinedDomainXYPlot plot
- JFrame frame
- int notifyCount
- double currentTime
+ void process()
+ void addSignals(String,NHMISignal)
+ void addSignals(String,List<NHMISignal>)
+ void addSignals(NHMISignal)
+ void dispose()
}
class utils.filters.MeanFilter {
+ {static} int bSize
- double[] buffer
- int bCount
- double integral
+ void process(MV,CMV)
}
class protection.model.logicalnodes.input.LCOM {
- File cfgFile
- File datFile
- List<String> cfgDataFile
- List<String> datDataFile
- List<Double> aCoefList
- List<Double> bCoefList
- int analogNumber
- int discreteNumber
- Iterator<String> dataIterator
+ List<MV> OUT
+ void process()
+ boolean hasNextData()
+ void setFilePath(String,String)
- void extractCfgFileData()
}
class protection.model.dataobjects.protection.ING {
- Integer SetVal
+ Integer getSetVal()
+ void setSetVal(Integer)
}
class protection.model.common.DataAttribute {
- T value
}
class breakerControl.status.SPC {
- DataAttribute<Boolean> stVal
}
class protection.model.dataobjects.settings.ASG {
- AnalogueValue setMag
}
abstract class protection.model.common.DATA {
- String name
- String reference
- DATA parent
- List<DATA> children
}
class protection.model.dataobjects.measurements.WYE {
- CMV phsA
- CMV phsB
- CMV phsC
- CMV neut
}
class breakerControl.status.DPS {
- DataAttribute<Byte> stVal
}
abstract class protection.model.logicalnodes.common.LN {
+ {abstract}void process()
}
class protection.model.logicalnodes.protections.PTOC {
+ WYE A
+ ASG StrVal
+ ING OpDlTmms
+ ACD Str
+ ACT Op
+ void process()
+ ACT getOp()
+ ASG getStrVal()
+ ING getOpDITmms()
}
class Main {
- {static} List<LN> lnList
+ {static} void main(String[])
}
class protection.model.dataobjects.measurements.MV {
- AnalogueValue instMag
- Quality q
- Timestamp t
}
class breakerControl.XCBR {
- DPC Pos
- SPC BlkOpn
- SPC BlkCls
+ void process()
}
class protection.model.logicalnodes.measurements.MMXU {
+ MV phsAInst
+ MV phsBInst
+ MV phsCInst
+ WYE A
- Filter phsACurrent
- Filter phsBCurrent
- Filter phsCCurrent
+ void process()
}
class protection.model.dataobjects.measurements.CMV {
- Vector cVal
- Quality q
- Timestamp t
}
class protection.model.dataobjects.measurements.AnalogueValue {
- DataAttribute<Double> f
}
class breakerControl.CSWI {
- ACT OpOpn
- ACT OpCls
- DPC Pos
- DPC PosA
- DPC PosB
- DPC PosC
+ void process()
}
class protection.model.logicalnodes.gui.other.NHMIPoint {
- X value1
- Y value2
+ X getValue1()
+ Y getValue2()
}
class protection.model.common.Timestamp {
- long value
}
class protection.model.dataobjects.protection.ACT {
- DataAttribute<Boolean> general
- DataAttribute<Boolean> phsA
- DataAttribute<Boolean> phsB
- DataAttribute<Boolean> phsC
- DataAttribute<Boolean> neut
}
class protection.model.common.Quality {
- int value
}
class protection.model.dataobjects.measurements.Vector {
- AnalogueValue mag
- AnalogueValue ang
}
class protection.model.dataobjects.protection.ACD {
- DataAttribute<Direction> dirGeneral
- DataAttribute<Direction> dirPhsA
- DataAttribute<Direction> dirPhsB
- DataAttribute<Direction> dirPhsC
}
enum protection.model.dataobjects.protection.Direction {
+  FORWARD
+  BACKWARD
+  BOTH
}


utils.filters.Filter <|-- utils.filters.Furier
protection.model.logicalnodes.common.LN <|-- protection.model.logicalnodes.gui.NHMIP
protection.model.logicalnodes.common.LN <|-- protection.model.logicalnodes.gui.NHMI
utils.filters.Filter <|-- utils.filters.MeanFilter
protection.model.logicalnodes.common.LN <|-- protection.model.logicalnodes.input.LCOM
protection.model.common.DATA <|-- protection.model.common.DataAttribute
protection.model.common.DATA <|-- protection.model.dataobjects.settings.ASG
protection.model.common.DATA <|-- protection.model.dataobjects.measurements.WYE
protection.model.common.DATA <|-- protection.model.logicalnodes.common.LN
protection.model.logicalnodes.common.LN <|-- protection.model.logicalnodes.protections.PTOC
protection.model.common.DATA <|-- protection.model.dataobjects.measurements.MV
protection.model.logicalnodes.common.LN <|-- breakerControl.XCBR
protection.model.logicalnodes.common.LN <|-- protection.model.logicalnodes.measurements.MMXU
protection.model.common.DATA <|-- protection.model.dataobjects.measurements.CMV
protection.model.common.DATA <|-- protection.model.dataobjects.measurements.AnalogueValue
protection.model.logicalnodes.common.LN <|-- breakerControl.CSWI
protection.model.common.DATA <|-- protection.model.common.Timestamp
protection.model.common.DATA <|-- protection.model.dataobjects.protection.ACT
protection.model.common.DATA <|-- protection.model.common.Quality
protection.model.common.DATA <|-- protection.model.dataobjects.measurements.Vector
protection.model.dataobjects.protection.ACT <|-- protection.model.dataobjects.protection.ACD
@enduml